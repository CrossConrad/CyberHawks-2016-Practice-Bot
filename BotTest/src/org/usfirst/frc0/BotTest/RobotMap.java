// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc0.BotTest;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	//Below creates all the motors, solenoids, and potentiometers
    public static SpeedController chasisRightMotor;
    public static SpeedController chasisLeftMotor;
    public static SpeedController chasisStrafeMotor;
    public static DoubleSolenoid chasisStafeSolenoid;
    public static SpeedController clawClawVertical;
    public static SpeedController clawPivot;
    public static AnalogPotentiometer clawPivotPosition;
    public static DigitalInput clawBottomLimit;
    public static DigitalInput clawTopLimit;
    public static DoubleSolenoid clawClawSolenoid;
    public static SpeedController elevatorElevatorVertical;
    public static AnalogPotentiometer elevatorHookHeight;


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    	
    	//The code below sets all of the motors, solenoids, and potentiometers to their set ports
        chasisRightMotor = new Talon(0);
        LiveWindow.addActuator("Chasis", "RightMotor", (Talon) chasisRightMotor);
        
        chasisLeftMotor = new Talon(1);
        LiveWindow.addActuator("Chasis", "LeftMotor", (Talon) chasisLeftMotor);
        
        chasisStrafeMotor = new Talon(2);
        LiveWindow.addActuator("Chasis", "StrafeMotor", (Talon) chasisStrafeMotor);
        
        chasisStafeSolenoid = new DoubleSolenoid(0, 2, 3);
        LiveWindow.addActuator("Chasis", "StafeSolenoid", chasisStafeSolenoid);
        
        clawClawVertical = new Talon(3);
        LiveWindow.addActuator("Claw", "ClawVertical", (Talon) clawClawVertical);
        
        clawPivot = new Talon(4);
        LiveWindow.addActuator("Claw", "Pivot", (Talon) clawPivot);
        
        clawPivotPosition = new AnalogPotentiometer(0, 1.0, 0.0);
        LiveWindow.addSensor("Claw", "PivotPosition", clawPivotPosition);
        
        clawBottomLimit = new DigitalInput(0);
        LiveWindow.addSensor("Claw", "BottomLimit", clawBottomLimit);
        
        clawTopLimit = new DigitalInput(1);
        LiveWindow.addSensor("Claw", "TopLimit", clawTopLimit);
        
        clawClawSolenoid = new DoubleSolenoid(0, 4, 5);
        LiveWindow.addActuator("Claw", "ClawSolenoid", clawClawSolenoid);
        
        elevatorElevatorVertical = new Talon(5);
        LiveWindow.addActuator("Elevator", "ElevatorVertical", (Talon) elevatorElevatorVertical);
        
        elevatorHookHeight = new AnalogPotentiometer(1, 1.0, 0.0);
        LiveWindow.addSensor("Elevator", "HookHeight", elevatorHookHeight);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
